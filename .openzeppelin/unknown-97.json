{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x410C1C5654B88cf0B6AD0f0A3658D135D994d09B"
  },
  "proxies": [
    {
      "address": "0x71e675AF27419a2D6BfE5c5E9aFaBe62dBE03989",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8a99f9983c5ebd5a42ce9764b2d62d41e3ddf79f642806276baa94760b3a8137": {
      "address": "0x8E11Fc08FeDC7493870dEC8F189294d70358Bb08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "_roleMembers",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4867_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "contract": "AccessControlEnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC1155PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "_totalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:23"
          },
          {
            "contract": "ERC1155SupplyUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:70"
          },
          {
            "contract": "BaseERC1155",
            "label": "tokenCounter",
            "type": "t_struct(Counter)4228_storage",
            "src": "../project:/contracts/BaseERC1155.sol:53"
          },
          {
            "contract": "BaseERC1155",
            "label": "tokenTotalSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../project:/contracts/BaseERC1155.sol:62"
          },
          {
            "contract": "BaseERC1155",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/BaseERC1155.sol:287"
          },
          {
            "contract": "BaseERC1155WithRoyalties",
            "label": "royaltyReceiver",
            "type": "t_address",
            "src": "../project:/contracts/BaseERC1155WithRoyalties.sol:31"
          },
          {
            "contract": "BaseERC1155WithRoyalties",
            "label": "royaltyFee",
            "type": "t_uint8",
            "src": "../project:/contracts/BaseERC1155WithRoyalties.sol:33"
          },
          {
            "contract": "BaseERC1155WithRoyalties",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../project:/contracts/BaseERC1155WithRoyalties.sol:130"
          },
          {
            "contract": "IngredientsNFT",
            "label": "ingredients",
            "type": "t_mapping(t_uint256,t_struct(Ingredient)9982_storage)",
            "src": "../project:/contracts/IngredientsNFT.sol:38"
          },
          {
            "contract": "IngredientsNFT",
            "label": "ipfsHash",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "../project:/contracts/IngredientsNFT.sol:41"
          },
          {
            "contract": "IngredientsNFT",
            "label": "defs",
            "type": "t_mapping(t_uint256,t_struct(Defs)9967_storage)",
            "src": "../project:/contracts/IngredientsNFT.sol:44"
          },
          {
            "contract": "IngredientsNFT",
            "label": "exceptedAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/IngredientsNFT.sol:47"
          },
          {
            "contract": "IngredientsNFT",
            "label": "exceptedFromAddresses",
            "type": "t_mapping(t_address,t_bool)",
            "src": "../project:/contracts/IngredientsNFT.sol:49"
          },
          {
            "contract": "IngredientsNFT",
            "label": "defsCounter",
            "type": "t_struct(Counter)4228_storage",
            "src": "../project:/contracts/IngredientsNFT.sol:56"
          },
          {
            "contract": "IngredientsNFT",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../project:/contracts/IngredientsNFT.sol:556"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Ingredient)9982_storage)": {
            "label": "mapping(uint256 => struct IngredientsNFT.Ingredient)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Ingredient)9982_storage": {
            "label": "struct IngredientsNFT.Ingredient",
            "members": [
              {
                "label": "id",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "totalVariations",
                "type": "t_uint256"
              },
              {
                "label": "nutritionsHash",
                "type": "t_uint256"
              },
              {
                "label": "defIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "keywords",
                "type": "t_array(t_string_storage)dyn_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_mapping(t_uint256,t_struct(Defs)9967_storage)": {
            "label": "mapping(uint256 => struct IngredientsNFT.Defs)"
          },
          "t_struct(Defs)9967_storage": {
            "label": "struct IngredientsNFT.Defs",
            "members": [
              {
                "label": "ingredientId",
                "type": "t_uint256"
              },
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "svg",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_struct(Counter)4228_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4867_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AddressSet)4867_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4566_storage"
              }
            ]
          },
          "t_struct(Set)4566_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          }
        }
      }
    }
  }
}
